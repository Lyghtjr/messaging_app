{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavrai/Documents/React_Projects/messaging_app/src/components/ChatFeed.jsx\";\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n  console.log(chat, userName, messages);\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: message[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: \"read receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  if (!chat) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat === null || chat === void 0 ? void 0 : chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => ` ${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/Users/abhinavrai/Documents/React_Projects/messaging_app/src/components/ChatFeed.jsx"],"names":["MyMessage","TheirMessage","MessageForm","ChatFeed","props","chats","activeChat","userName","messages","chat","console","log","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMyMessage","sender","username","width","marginRight","marginLeft","title","people","person","height"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,QAAQ,GAAGC,KAAD,IAAS;AACzB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,UAAP;AAAkBC,IAAAA,QAAlB;AAA2BC,IAAAA;AAA3B,MAAqCJ,KAA3C;AACA,QAAMK,IAAI,GAACJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiBF,QAAjB,EAA0BC,QAA1B;;AAEA,QAAMI,cAAc,GAAC,MAAI;AACrB,UAAMC,IAAI,GAACC,MAAM,CAACD,IAAP,CAAYL,QAAZ,CAAX;AACA,WAAOK,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAAa;AACzB,YAAMC,OAAO,GAACV,QAAQ,CAACQ,GAAD,CAAtB;AACA,YAAMG,cAAc,GAACF,KAAK,KAAG,CAAR,GAAU,IAAV,GAAeJ,IAAI,CAACI,KAAK,GAAC,CAAP,CAAxC;AACA,YAAMG,WAAW,GAACb,QAAQ,KAAIW,OAAO,CAACG,MAAR,CAAeC,QAA7C;AACA,0BACI;AAA0B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAjC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACIH,WAAW,gBAAC,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAD,gBAAkC,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA,OAAvB;AAAgC,YAAA,WAAW,EAAEA,OAAO,CAACC,cAAD;AAApD;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAACK,YAAAA,WAAW,EAACJ,WAAW,GAAC,MAAD,GAAQ,KAAhC;AAAsCK,YAAAA,UAAU,EAACL,WAAW,GAAC,KAAD,GAAO;AAAnE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAW,OAAMH,KAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAdM,CAAP;AAeH,GAjBD;;AAmBA,MAAG,CAACR,IAAJ,EAAS,OAAO,YAAP;AACT,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BA,IAA7B,aAA6BA,IAA7B,uBAA6BA,IAAI,CAAEiB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACGjB,IAAI,CAACkB,MAAL,CAAYZ,GAAZ,CAAiBa,MAAD,IAAa,IAAGA,MAAM,CAACA,MAAP,CAAcN,QAAS,EAAvD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGV,cAAc,EAPjB,eAQE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeC,CAxCD;;KAAM1B,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\nconst ChatFeed =(props)=>{\nconst {chats,activeChat,userName,messages}=props;\nconst chat=chats && chats[activeChat];\nconsole.log(chat,userName,messages);\n\nconst renderMessages=()=>{\n    const keys=Object.keys(messages);\n    return keys.map((key,index)=>{\n        const message=messages[key];\n        const lastMessageKey=index===0?null:keys[index-1];\n        const isMyMessage=userName ===message.sender.username;\n        return(\n            <div key={`msg_${index}`} style={{width:'100%'}}>\n                <div className=\"message-block\">{\n                    isMyMessage?<MyMessage message={message}/> : <TheirMessage message={message} lastMessage={message[lastMessageKey]}/>\n                }</div>\n                <div className=\"read-receipts\" style={{marginRight:isMyMessage?'18px':'0px',marginLeft:isMyMessage?'0px':'68px'}}>\n                    read receipt\n                </div>\n            </div>\n        )\n    })\n}\n\nif(!chat)return 'Loading...';\nreturn (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: '100px' }} />\n      <div className=\"message-form-container\">\n       \n      </div>\n    </div>\n  );\n}\n\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}